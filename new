create table if not exists USER (
  USE_ID int not null primary key auto_increment,
  USE_NAME varchar(100),
  USE_SEX varchar(1),
  USE_AGE NUMBER(3),
  USE_ID_NO VARCHAR(18),
  USE_PHONE_NUM VARCHAR(11),
  USE_EMAIL VARCHAR(100),
  CREATE_TIME DATE,
  MODIFY_TIME DATE,
  USE_STATE VARCHAR(1));

INSERT INTO USER (USE_ID,USE_NAME,USE_SEX,USE_AGE,USE_ID_NO,USE_PHONE_NUM,USE_EMAIL,CREATE_TIME,MODIFY_TIME,USE_STATE) VALUES(
1,'一一哥','0',20,'240928198810051234','12345678910','2312119590@qq.com',sysdate,sysdate,'0');

INSERT INTO USER (USE_ID,USE_NAME,USE_SEX,USE_AGE,USE_ID_NO,USE_PHONE_NUM,USE_EMAIL,CREATE_TIME,MODIFY_TIME,USE_STATE) VALUES(
2,'孙一一','0',22,'240928198810051234','12345678911','2312119590@qq.com',sysdate,sysdate,'0');

INSERT INTO USER (USE_ID,USE_NAME,USE_SEX,USE_AGE,USE_ID_NO,USE_PHONE_NUM,USE_EMAIL,CREATE_TIME,MODIFY_TIME,USE_STATE) VALUES(
3,'三胖','1',24,'240928198810051234','12345678912','2312119590@qq.com',sysdate,sysdate,'0')

#h2配置
spring:
  jpa:
    show-sql: true #启用SQL语句的日志记录
    hibernate:
      ddl-auto: update #设置ddl模式
  datasource:
    url: jdbc:h2:F:/H2/db/db02 #配置h2数据库的连接地址
    username: root #配置数据库用户名
    password: syc123 #配置数据库密码
    driverClassName: org.h2.Driver #配置JDBC Driver
    schema: classpath:db/schema.sql #进行该配置后，每次启动程序，程序都会运行resources/db/schema.sql文件，对数据库的结构进行操作。
    data: classpath:db/data.sql  #进行该配置后，每次启动程序，程序都会运行resources/db/data.sql文件，对数据库的数据操作。
    platform: h2  #表明使用的数据库平台是h2
  h2: #h2 web console设置
    console:
      settings:
        web-allow-others: true #进行该配置后，h2 web consloe就可以在远程访问了。否则只能在本机访问。
      path: /h2 #进行该配置，你就可以通过YOUR_URL/h2访问h2 web consloe。YOUR_URL是你程序的访问URl。
      enabled: true #进行该配置，程序开启时就会启动h2 web consloe。当然这是默认的，如果你不想在启动程序时启动h2 web consloe，那么就设

package com.yyg.boot;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
/**
 * @Author 一一哥Sun
 * @Date Created in 2020/3/31
 * @Description Description
 */
@SpringBootApplication
public class H2Application {
    public static void main(String[] args) {
        SpringApplication.run(H2Application.class, args);
    }
}

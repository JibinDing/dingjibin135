import React from 'react';
import { render, screen, fireEvent } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import App from './App';
import userEvent from '@testing-library/user-event';

describe('To-Do List App', () => {
  test('should add a task to the list', () => {
    render(<App />);

    const input = screen.getByPlaceholderText('Add a new task');
    const addButton = screen.getByText('Add Task');

    fireEvent.change(input, { target: { value: 'Test Task' } });
    fireEvent.click(addButton);

    // Assert that the task appears in the list
    expect(screen.getByText('Test Task')).toBeInTheDocument();
  });

  test('should complete a task', () => {
    render(<App />);

    const input = screen.getByPlaceholderText('Add a new task');
    const addButton = screen.getByText('Add Task');

    fireEvent.change(input, { target: { value: 'Complete Task' } });
    fireEvent.click(addButton);

    const completeButton = screen.getByText('Complete');
    fireEvent.click(completeButton);

    // Assert that the task is marked as completed
    expect(screen.getByText('(Completed)')).toBeInTheDocument();
  });

  test('should delete a task', () => {
    render(<App />);

    const input = screen.getByPlaceholderText('Add a new task');
    const addButton = screen.getByText('Add Task');

    fireEvent.change(input, { target: { value: 'Delete Task' } });
    fireEvent.click(addButton);

    const deleteButton = screen.getByText('Delete');
    fireEvent.click(deleteButton);

    // Assert that the task is no longer in the list
    expect(screen.queryByText('Delete Task')).not.toBeInTheDocument();
  });

  test('should reorder tasks by drag and drop', async () => {
    render(<App />);

    const input = screen.getByPlaceholderText('Add a new task');
    const addButton = screen.getByText('Add Task');

    // Add first task
    fireEvent.change(input, { target: { value: 'Task 1' } });
    fireEvent.click(addButton);

    // Add second task
    fireEvent.change(input, { target: { value: 'Task 2' } });
    fireEvent.click(addButton);

    // Get the list items
    const tasks = screen.getAllByRole('listitem');

    expect(tasks[0]).toHaveTextContent('Task 1');
    expect(tasks[1]).toHaveTextContent('Task 2');

    // Simulate drag-and-drop
    userEvent.dragStart(tasks[1]);
    userEvent.dragEnter(tasks[0]);
    userEvent.dragEnd(tasks[1]);

    const reorderedTasks = screen.getAllByRole('listitem');

    // Assert that the tasks are reordered
    expect(reorderedTasks[0]).toHaveTextContent('Task 2');
    expect(reorderedTasks[1]).toHaveTextContent('Task 1');
  });
});
body {
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
    margin: 0;
    padding: 20px;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

.container {
    background-color: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    width: 300px;
}

h1 {
    text-align: center;
}

.task-input {
    display: flex;
    gap: 5px;
    margin-bottom: 20px;
}

#new-task {
    flex: 1;
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

button {
    padding: 8px 12px;
    border: none;
    border-radius: 4px;
    background-color: #28a745;
    color: white;
    cursor: pointer;
}

button:hover {
    background-color: #218838;
}

ul {
    list-style: none;
    padding: 0;
}

li {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 4px;
    margin-bottom: 5px;
    background-color: #f9f9f9;
}

.task {
    display: flex;
    align-items: center;
    gap: 10px;
}

.task.completed {
    text-decoration: line-through;
    color: gray;
}

.summary {
    margin-top: 20px;
    text-align: center;
}



document.addEventListener('DOMContentLoaded', function() {
    const addTaskBtn = document.getElementById('add-task-btn');
    const newTaskInput = document.getElementById('new-task');
    const taskList = document.getElementById('task-list');
    const totalTasksElem = document.getElementById('total-tasks');
    const completedTasksElem = document.getElementById('completed-tasks');

    let tasks = [];

    function renderTasks() {
        taskList.innerHTML = '';

        tasks.forEach((task, index) => {
            const taskItem = document.createElement('li');
            taskItem.setAttribute('draggable', 'true');
            taskItem.classList.add('task-item');
            if (task.completed) taskItem.classList.add('completed');

            const taskText = document.createElement('span');
            taskText.classList.add('task');
            taskText.textContent = task.text;

            const completeBtn = document.createElement('button');
            completeBtn.textContent = 'Complete';
            completeBtn.classList.add('complete-btn');
            completeBtn.addEventListener('click', () => toggleCompleteTask(index));

            const deleteBtn = document.createElement('button');
            deleteBtn.textContent = 'Delete';
            deleteBtn.classList.add('delete-btn');
            deleteBtn.addEventListener('click', () => deleteTask(index));

            taskItem.appendChild(taskText);
            taskItem.appendChild(completeBtn);
            taskItem.appendChild(deleteBtn);

            taskList.appendChild(taskItem);

            // Drag-and-drop functionality
            taskItem.addEventListener('dragstart', (e) => dragStart(e, index));
            taskItem.addEventListener('dragover', dragOver);
            taskItem.addEventListener('drop', (e) => drop(e, index));
        });

        updateSummary();
    }

    function addTask() {
        const taskText = newTaskInput.value.trim();
        if (taskText) {
            tasks.push({ text: taskText, completed: false });
            newTaskInput.value = '';
            renderTasks();
        }
    }

    function deleteTask(index) {
        tasks.splice(index, 1);
        renderTasks();
    }

    function toggleCompleteTask(index) {
        tasks[index].completed = !tasks[index].completed;
        renderTasks();
    }

    function updateSummary() {
        totalTasksElem.textContent = tasks.length;
        completedTasksElem.textContent = tasks.filter(task => task.completed).length;
    }

    // Drag-and-drop functions
    let draggedItemIndex = null;

    function dragStart(e, index) {
        draggedItemIndex = index;
        e.dataTransfer.effectAllowed = 'move';
    }

    function dragOver(e) {
        e.preventDefault();
    }

    function drop(e, index) {
        e.preventDefault();
        if (draggedItemIndex !== null) {
            const draggedItem = tasks.splice(draggedItemIndex, 1)[0];
            tasks.splice(index, 0, draggedItem);
            draggedItemIndex = null;
            renderTasks();
        }
    }

    addTaskBtn.addEventListener('click', addTask);
    newTaskInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') addTask();
    });

    renderTasks();
});

